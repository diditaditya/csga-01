// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/products": {
            "get": {
                "description": "Find all products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Find all products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Product"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create a product",
                "parameters": [
                    {
                        "description": "Product JSON",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Find product by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Find product by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product JSON",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete product by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                }
            }
        },
        "/warehouses": {
            "get": {
                "description": "Find all warehouses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Find all warehouses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Warehouse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a warehouse",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Create a warehouse",
                "parameters": [
                    {
                        "description": "Warehouse JSON",
                        "name": "warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse.WarehouseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Warehouse"
                        }
                    }
                }
            }
        },
        "/warehouses/{id}": {
            "get": {
                "description": "Find warehouse by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Find warehouse by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "warehouse Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Warehouse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a warehouse",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Update a warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Warehouse JSON",
                        "name": "Warehouse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse.WarehouseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Warehouse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete warehouse by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Delete warehouse by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warehouse Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Warehouse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/models.Warehouse"
                },
                "warehouseId": {
                    "type": "integer"
                }
            }
        },
        "models.Warehouse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "product.ProductRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "warehouseId": {
                    "type": "integer"
                }
            }
        },
        "warehouse.WarehouseRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Warehouse APIs",
	Description:      "Warehouse APIs.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
