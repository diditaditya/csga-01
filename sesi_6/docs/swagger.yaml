basePath: /api/v1
definitions:
  models.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
      type:
        type: string
      warehouse:
        $ref: '#/definitions/models.Warehouse'
      warehouseId:
        type: integer
    type: object
  models.Warehouse:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  product.ProductRequest:
    properties:
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
      type:
        type: string
      warehouseId:
        type: integer
    type: object
  warehouse.WarehouseRequest:
    properties:
      address:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Warehouse APIs.
  termsOfService: http://swagger.io/terms/
  title: Warehouse APIs
  version: "1.0"
paths:
  /products:
    get:
      description: Find all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Find all products
      tags:
      - Product
    post:
      description: Create a product
      parameters:
      - description: Product JSON
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Create a product
      tags:
      - Product
  /products/{id}:
    delete:
      description: Delete product by id
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Delete product by id
      tags:
      - Product
    get:
      description: Find product by id
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Find product by id
      tags:
      - Product
    put:
      description: Update a product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      - description: Product JSON
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update a product
      tags:
      - Product
  /warehouses:
    get:
      description: Find all warehouses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Warehouse'
            type: array
      summary: Find all warehouses
      tags:
      - Warehouse
    post:
      description: Create a warehouse
      parameters:
      - description: Warehouse JSON
        in: body
        name: warehouse
        required: true
        schema:
          $ref: '#/definitions/warehouse.WarehouseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Warehouse'
      summary: Create a warehouse
      tags:
      - Warehouse
  /warehouses/{id}:
    delete:
      description: Delete warehouse by id
      parameters:
      - description: Warehouse Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Warehouse'
      summary: Delete warehouse by id
      tags:
      - Warehouse
    get:
      description: Find warehouse by id
      parameters:
      - description: warehouse Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Warehouse'
      summary: Find warehouse by id
      tags:
      - Warehouse
    put:
      description: Update a warehouse
      parameters:
      - description: Warehouse Id
        in: path
        name: id
        required: true
        type: integer
      - description: Warehouse JSON
        in: body
        name: Warehouse
        required: true
        schema:
          $ref: '#/definitions/warehouse.WarehouseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Warehouse'
      summary: Update a warehouse
      tags:
      - Warehouse
schemes:
- http
securityDefinitions:
  JWT:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
